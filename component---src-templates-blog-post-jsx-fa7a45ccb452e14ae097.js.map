{"version":3,"sources":["webpack:///./src/templates/blog-post.jsx","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/utils/typography.js","webpack:///./src/utils/colors.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/layout.jsx","webpack:///./src/components/seo.js"],"names":["styles","dateStyle","fontSize","lineHeight","marginBottom","marginTop","fontStyle","ruleStyle","rhythm","listStyle","display","flexWrap","justifyContent","padding","BlogPostTemplate","render","post","this","props","data","markdownRemark","siteTitle","site","siteMetadata","title","_this$props$pageConte","pageContext","previous","next","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_3__","location","_components_seo__WEBPACK_IMPORTED_MODULE_4__","frontmatter","description","excerpt","style","date","dangerouslySetInnerHTML","__html","html","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","fields","slug","rel","React","Component","pageQuery","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","createContext","Consumer","staticQueryData","query","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","scale","typography__WEBPACK_IMPORTED_MODULE_1__","typography__WEBPACK_IMPORTED_MODULE_1___default","typography_theme_funston__WEBPACK_IMPORTED_MODULE_2__","typography_theme_funston__WEBPACK_IMPORTED_MODULE_2___default","funstonTheme","overrideThemeStyles","a.gatsby-resp-image-link","boxShadow","typography","Typography","colors","midnightBlue","clouds","pureApple","ProdPageRenderer","_ref","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","headerRootStyle","headerLinkStyle","textDecoration","color","headerStyle","fontFamily","layoutContainer","flexDirection","marginLeft","marginRight","maxWidth","minHeight","footer","flexGrow","socialLink","Layout","header","_this$props","react__WEBPACK_IMPORTED_MODULE_3___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","linksQuery","_data$site$siteMetada","social","twitter","github","email","href","target","_public_static_d_3564818697_json__WEBPACK_IMPORTED_MODULE_2__","SEO","lang","meta","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","arrayOf"],"mappings":"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","file":"component---src-templates-blog-post-jsx-fa7a45ccb452e14ae097.js","sourcesContent":["import React from \"react\";\nimport { Link, graphql } from \"gatsby\";\n\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\nimport { rhythm, scale } from \"../utils/typography\";\n\nconst styles = {\n  dateStyle: {\n    fontSize: \"0.83255rem\",\n    lineHeight: \"1.75rem\",\n    marginBottom:\"1.75rem\",\n    marginTop: \"-1.9rem\",\n    fontStyle: \"italic\"\n  },\n  ruleStyle: {\n    marginBottom: rhythm(1)\n  },\n  listStyle: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-between\",\n    listStyle: \"none\",\n    padding: 0\n  }\n};\n\nclass BlogPostTemplate extends React.Component {\n  render() {\n    const post = this.props.data.markdownRemark;\n    const siteTitle = this.props.data.site.siteMetadata.title;\n    const { previous, next } = this.props.pageContext;\n    const { dateStyle, ruleStyle, listStyle } = styles;\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO\n          title={post.frontmatter.title}\n          description={post.frontmatter.description || post.excerpt}\n        />\n        <h1>{post.frontmatter.title}</h1>\n        <p style={dateStyle}>{post.frontmatter.date}</p>\n        <div dangerouslySetInnerHTML={{ __html: post.html }} />\n        <hr style={ruleStyle} />\n        <ul style={listStyle}>\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </Layout>\n    );\n  }\n}\n\nexport default BlogPostTemplate;\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n      }\n    }\n  }\n`;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import './main.css';\nimport Typography from \"typography\";\nimport funstonTheme from \"typography-theme-funston\";\n\nfunstonTheme.overrideThemeStyles = () => {\n    return {\n        \"a.gatsby-resp-image-link\": {\n            boxShadow: `none`\n        }\n    };\n};\n\n// delete funstonTheme.googleFonts;\n\nconst typography = new Typography(funstonTheme);\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== `production`) {\n    typography.injectStyles();\n}\n\nexport default typography;\nexport const rhythm = typography.rhythm;\nexport const scale = typography.scale;","const colors = {\n  midnightBlue: \"#2c3e50\",\n  clouds: \"#ecf0f1\",\n  pureApple: \"#009432\"\n};\n\nexport default colors;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React, { Component } from \"react\";\nimport { Link, graphql, StaticQuery } from \"gatsby\";\n\nimport { rhythm, scale } from \"../utils/typography\";\nimport colors from \"../utils/colors\";\n\nconst styles = {\n  headerRootStyle: {\n    ...scale(1.5),\n    marginBottom: rhythm(1.5),\n    marginTop: 0\n  },\n  headerLinkStyle: {\n    boxShadow: \"none\",\n    textDecoration: \"none\",\n    color: colors.pureApple\n  },\n  headerStyle: {\n    fontFamily: \"Montserrat, sans-serif\",\n    marginTop: 0\n  },\n  layoutContainer: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    maxWidth: rhythm(24),\n    padding: `${rhythm(1.5)} ${rhythm(3 / 4)}`,\n    minHeight: \"100vh\"\n  },\n  footer: {\n    display: \"flex\",\n    flexGrow: 0,\n    justifyContent: \"center\"\n  },\n  socialLink: {\n    color: colors.pureApple,\n    padding: \"0 10px\"\n  }\n};\n\nclass Layout extends Component {\n  render() {\n    const { location, title, children } = this.props;\n    const { headerRootStyle, headerLinkStyle, headerStyle, layoutContainer } = styles;\n    const rootPath = `${__PATH_PREFIX__}/`;\n    let header;\n\n    if (location.pathname === rootPath) {\n      header = (\n        <h1 style={headerRootStyle}>\n          <Link style={headerLinkStyle} to={\"/\"}>\n            {title}\n          </Link>\n        </h1>\n      );\n    } else {\n      header = (\n        <h3 style={headerStyle}>\n          <Link style={headerLinkStyle} to={\"/\"}>\n            {title}\n          </Link>\n        </h3>\n      );\n    }\n    return (\n      <StaticQuery\n        query={linksQuery}\n        render={data => {\n          const { twitter, github, email } = data.site.siteMetadata.social;\n          return (\n            <div style={layoutContainer}>\n              <header>{header}</header>\n              <main style={{ flexGrow: 1 }}>{children}</main>\n              <footer style={styles.footer}>\n                <a style={styles.socialLink} href={twitter} target=\"_blank\">\n                  twitter\n                </a>{\" \"}\n                &bull;{\" \"}\n                <a style={styles.socialLink} href={github} target=\"_blank\">\n                  github\n                </a>{\" \"}\n                &bull;{\" \"}\n                <a style={styles.socialLink} href={email} target=\"_blank\">\n                  email\n                </a>\n              </footer>\n            </div>\n          );\n        }}\n      />\n    );\n  }\n}\n\nconst linksQuery = graphql`\n  query LinksQuery {\n    site {\n      siteMetadata {\n        social {\n          twitter\n          github\n          email\n        }\n      }\n    }\n  }\n`;\n\nexport default Layout;\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Helmet from \"react-helmet\";\nimport { useStaticQuery, graphql } from \"gatsby\";\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription\n        },\n        {\n          property: `og:title`,\n          content: title\n        },\n        {\n          property: `og:description`,\n          content: metaDescription\n        },\n        {\n          property: `og:type`,\n          content: `website`\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author\n        },\n        {\n          name: `twitter:title`,\n          content: title\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription\n        }\n      ].concat(meta)}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired\n};\n\nexport default SEO;\n"],"sourceRoot":""}