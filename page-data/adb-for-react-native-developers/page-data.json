{"componentChunkName":"component---src-templates-blog-post-jsx","path":"/adb-for-react-native-developers/","webpackCompilationHash":"1f1db5f6e372c64d5d80","result":{"data":{"site":{"siteMetadata":{"title":"Este es un Hotfix!","author":"Veronica Clavijo"}},"markdownRemark":{"id":"163a58a6-9dfa-5f21-ad5f-c77f57aa6f53","excerpt":"En el tiempo que llevo desarrollando aplicaciones móviles con React Native muchas veces he tenido que abrir AndroidStudio para poder hacer algo relacionado con…","html":"<p>En el tiempo que llevo desarrollando aplicaciones móviles con React Native muchas veces he tenido que abrir AndroidStudio para poder hacer <em>algo</em> relacionado con el dispositivo (emulador o dispositivo físico).</p>\n<p>Para aquellos que alguna vez han desarrollado para Android saben que AndroidStudio tarda un par de minutos en iniciar y que consume mucha memoria. Tiempo y recursos que no valen la pena ser utilizados para tareas sencillas y repetitivas…</p>\n<p>Aprender un par de comandos de ADB me ha ayudado a hacer dichas tareas de manera más sencilla y rápida usando la línea de comandos, sin mencionar que me gusta mucho hacer cosas con la terminal :P.</p>\n<h1 id=\"¿qué-es-adb\"><a href=\"#%C2%BFqu%C3%A9-es-adb\" aria-label=\"¿qué es adb permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>¿Qué es ADB?</h1>\n<p>Según la <a href=\"https://developer.android.com/studio/command-line/adb\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">definición oficial</a>, Android Debug Bridge es una herramienta de línea de comandos que permite interactuar con el dispositivo con el que estás debuggeando una aplicación Android en desarrollo. Básicamente, un comando.</p>\n<p>ADB tiene muchas opciones y argumentos que permiten ejecutar tareas diferentes en el emulador o dispositivo físico. Pero la estructura básica es:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">adb <span class=\"token punctuation\">[</span>opción<span class=\"token punctuation\">]</span> comando</code></pre></div>\n<p>El argumento <code class=\"language-text\">opción</code> es innecesario si solo tienes un dispositivo o emulador conectado y <code class=\"language-text\">comando</code> es la acción que quieres ejecutar (es un argumento requerido).</p>\n<p>Hay una lista muy larga de comandos que puedes ejecutar con <code class=\"language-text\">adb</code> para interactuar con el almacenamiento del dispositivo, para configurar los puertos, configurar el WiFi o las opciones de red y hasta tomar screenshots o grabar la pantalla del dispositivo.</p>\n<p>Para ver todas las alternativas puedes ejecutar desde una línea de comandos</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">adb --help</code></pre></div>\n<p>o consultar la <a href=\"https://developer.android.com/studio/command-line/adb\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">documentación oficial</a>. En este post voy a describir solo unas cuantas que uso frecuentemente…</p>\n<h2 id=\"1-port-forwarding\"><a href=\"#1-port-forwarding\" aria-label=\"1 port forwarding permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. Port Forwarding</h2>\n<p>Este es un clásico, configurar la redirección de puertos. Si usas librerias como <a href=\"https://storybook.js.org/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Storybook</a> o <a href=\"https://infinite.red/reactotron\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Reactotron</a> te encuentras con que necesitas comunicar el puerto del dispositivo que usan estas librerias a un puerto de tu maquina de desarrollo, <code class=\"language-text\">adb</code> te ayuda con esto!</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">adb reverse <span class=\"token operator\">&lt;</span>puerto-remoto<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>puerto-local<span class=\"token operator\">></span></code></pre></div>\n<p>En el caso de <a href=\"https://storybook.js.org/docs/guides/guide-react-native/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Storybook</a> el puerto remoto es <code class=\"language-text\">tcp:7007</code>, por lo que el comando <code class=\"language-text\">adb</code> es:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">adb reverse tcp:7007 tcp:7007</code></pre></div>\n<h2 id=\"2-abrir-el-menú-de-desarrollo\"><a href=\"#2-abrir-el-men%C3%BA-de-desarrollo\" aria-label=\"2 abrir el menú de desarrollo permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. Abrir el menú de desarrollo</h2>\n<p>Si, ya sé que esto mismo se puede hacer con la combinación de teclado <code class=\"language-text\">Ctrl + M</code> (o <code class=\"language-text\">Cmd + M</code> para los usuarions de macOS). Pero yo lo hago con línea de comandos porque… se puede! xD</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">adb shell input keyevent <span class=\"token number\">82</span></code></pre></div>\n<h2 id=\"3-copiar-archivos-desde-y-hacia-el-almacenamiento-del-dispositivo\"><a href=\"#3-copiar-archivos-desde-y-hacia-el-almacenamiento-del-dispositivo\" aria-label=\"3 copiar archivos desde y hacia el almacenamiento del dispositivo permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. Copiar archivos desde y hacia el almacenamiento del dispositivo</h2>\n<p>Para copiar un archivo <strong>hacia</strong> el almacenamiento del dipositivo:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">adb push <span class=\"token operator\">&lt;</span>archivo-local<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>archivo-dispositivo<span class=\"token operator\">></span></code></pre></div>\n<p>Por ejemplo:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">adb push ~/Downloads/image.png /sdcard/Downloads/image.png</code></pre></div>\n<p>Para copiar un archivo <strong>desde</strong> el almacenamiento del dispositivo hacia tu máquina de desarrollo:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">adb pull <span class=\"token operator\">&lt;</span>archivo-disposivo<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>archivo-local<span class=\"token operator\">></span></code></pre></div>\n<p>Por ejemplo:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">adb pull /sdcard/Downloads/voice.aac ~/Downloads/voice.aac</code></pre></div>\n<h2 id=\"4-instalar-una-app\"><a href=\"#4-instalar-una-app\" aria-label=\"4 instalar una app permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. Instalar una app</h2>\n<p>Si tienes un instalador .apk válido que quisieras instalar en un dispositivo desde la línea de comandos:</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">adb <span class=\"token function\">install</span> <span class=\"token operator\">&lt;</span>archivo-apk<span class=\"token operator\">></span></code></pre></div>\n<h2 id=\"5-sacar-screenshot\"><a href=\"#5-sacar-screenshot\" aria-label=\"5 sacar screenshot permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5. Sacar screenshot</h2>\n<p>Es útil también tomar una captura de pantalla del dispositivo en un determinado momento para documentar el estado de la aplicación. Se logra facilmente con la siguiente sintaxis del comando:</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">adb shell screencap <span class=\"token operator\">&lt;</span>nombre-de-archivo<span class=\"token operator\">></span></code></pre></div>\n<p>Por ejemplo, el resultado de:</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">adb shell screencap /sdcard/Pictures/captura-pantalla.png</code></pre></div>\n<p>es una imagen en <code class=\"language-text\">/sdcard/Pictures</code> con el nombre <code class=\"language-text\">captura-pantalla.png</code>.</p>\n<h2 id=\"6-grabar-video-de-la-pantalla\"><a href=\"#6-grabar-video-de-la-pantalla\" aria-label=\"6 grabar video de la pantalla permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>6. Grabar video de la pantalla</h2>\n<p>Así como se puede obtener una captura de pantalla, es también posible grabar un video de la pantalla.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">adb shell screenrecord <span class=\"token operator\">&lt;</span>nombre-de-archivo<span class=\"token operator\">></span></code></pre></div>\n<p>Para parar la grabación basta con presionar la combinación de teclado <code class=\"language-text\">Ctrl + C</code>.</p>\n<p>Por ejemplo:</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">adb shell screenrecord /sdcard/Video/record.mp4\n\n<span class=\"token comment\"># 10 segundos después</span>\nCtrl + C</code></pre></div>\n<h2 id=\"bonus\"><a href=\"#bonus\" aria-label=\"bonus permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Bonus!</h2>\n<p>Este no es un comando de ADB en sí, pero es posible abrir un emulador Android mediante la línea de comandos.</p>\n<p>En el directorio donde está instalado el Android SDK y dentro del directorio emulator (<code class=\"language-text\">/path/to/Android/Sdk/emulator</code>) existe un ejecutable llamado <code class=\"language-text\">emulator</code> con el cual se puede levantar un emulador:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">cd</span> /path/to/Android/Sdk/emulator\n./emulator @<span class=\"token operator\">&lt;</span>nombre-del-emulador<span class=\"token operator\">></span></code></pre></div>\n<p>Para tener una lista de los emuladores disponibles para ejecutar:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">./emulator -list-avds</code></pre></div>\n<p>En mi caso la salida de este último comando es:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># Example Response!</span>\nPixel2\nPixel2old\nPixel_2_API_25\nPixel_2_API_26</code></pre></div>\n<p>Por lo que un ejemplo de comando para ejecutar el emulador Pixel2 es:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">emulator @Pixel2</code></pre></div>\n<p>Por facilidad yo creé un link simbolico que apunta al ejecutable <code class=\"language-text\">/path/to/Android/Sdk/emulator/emulator</code> ;)</p>\n<p>Básicamente esos son los comandos que uso diaramente para desarrollar con React Native para Android. Saludos!</p>","frontmatter":{"title":"ADB para desarrolladores en React Native","date":"January 17, 2020","description":"Han habido ocasiones en las que he necesitado abrir AndroidStudio para realizar una simple tarea relacionada con el dispositivo Android. ¿Hay una manera más rápida?","tags":["react-native","consola"]}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/adb-for-react-native-developers/","previous":{"fields":{"slug":"/debian-buster-config-wifi/"},"frontmatter":{"title":"Configuración de WiFi en Debian Buster"}},"next":{"fields":{"slug":"/tmux-semi-automatizacion/"},"frontmatter":{"title":"Semi-automatización de TMUX"}}}}}