{
    "componentChunkName": "component---src-templates-blog-post-jsx",
    "path": "/posts/adb-for-react-native-developers/",
    "result": {"data":{"mdx":{"slug":"adb-for-react-native-developers/","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"ADB para desarrolladores en React Native\",\n  \"date\": \"2020-01-17\",\n  \"description\": \"Han habido ocasiones en las que he necesitado abrir AndroidStudio para realizar una simple tarea relacionada con el dispositivo Android. ¿Hay una manera más rápida?\",\n  \"tags\": [\"react-native\", \"consola\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"En el tiempo que llevo desarrollando aplicaciones m\\xF3viles con React Native muchas veces he tenido que abrir AndroidStudio para poder hacer \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"algo\"), \" relacionado con el dispositivo (emulador o dispositivo f\\xEDsico).\"), mdx(\"p\", null, \"Para aquellos que alguna vez han desarrollado para Android saben que AndroidStudio tarda un par de minutos en iniciar y que consume mucha memoria. Tiempo y recursos que no valen la pena ser utilizados para tareas sencillas y repetitivas...\"), mdx(\"p\", null, \"Aprender un par de comandos de ADB me ha ayudado a hacer dichas tareas de manera m\\xE1s sencilla y r\\xE1pida usando la l\\xEDnea de comandos, sin mencionar que me gusta mucho hacer cosas con la terminal :P.\"), mdx(\"h1\", null, \"\\xBFQu\\xE9 es ADB?\"), mdx(\"p\", null, \"Seg\\xFAn la \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://developer.android.com/studio/command-line/adb\"\n  }, \"definici\\xF3n oficial\"), \", Android Debug Bridge es una herramienta de l\\xEDnea de comandos que permite interactuar con el dispositivo con el que est\\xE1s debuggeando una aplicaci\\xF3n Android en desarrollo. B\\xE1sicamente, un comando.\"), mdx(\"p\", null, \"ADB tiene muchas opciones y argumentos que permiten ejecutar tareas diferentes en el emulador o dispositivo f\\xEDsico. Pero la estructura b\\xE1sica es:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"adb [opci\\xF3n] comando\\n\")), mdx(\"p\", null, \"El argumento \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"opci\\xF3n\"), \" es innecesario si solo tienes un dispositivo o emulador conectado y \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"comando\"), \" es la acci\\xF3n que quieres ejecutar (es un argumento requerido).\"), mdx(\"p\", null, \"Hay una lista muy larga de comandos que puedes ejecutar con \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"adb\"), \" para interactuar con el almacenamiento del dispositivo, para configurar los puertos, configurar el WiFi o las opciones de red y hasta tomar screenshots o grabar la pantalla del dispositivo.\"), mdx(\"p\", null, \"Para ver todas las alternativas puedes ejecutar desde una l\\xEDnea de comandos\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"adb --help\\n\")), mdx(\"p\", null, \"o consultar la \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://developer.android.com/studio/command-line/adb\"\n  }, \"documentaci\\xF3n oficial\"), \". En este post voy a describir solo unas cuantas que uso frecuentemente...\"), mdx(\"h2\", null, \"1. Port Forwarding\"), mdx(\"p\", null, \"Este es un cl\\xE1sico, configurar la redirecci\\xF3n de puertos. Si usas librerias como \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://storybook.js.org/\"\n  }, \"Storybook\"), \" o \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://infinite.red/reactotron\"\n  }, \"Reactotron\"), \" te encuentras con que necesitas comunicar el puerto del dispositivo que usan estas librerias a un puerto de tu maquina de desarrollo, \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"adb\"), \" te ayuda con esto!\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"adb reverse <puerto-remoto> <puerto-local>\\n\")), mdx(\"p\", null, \"En el caso de \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://storybook.js.org/docs/guides/guide-react-native/\"\n  }, \"Storybook\"), \" el puerto remoto es \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"tcp:7007\"), \", por lo que el comando \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"adb\"), \" es:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"adb reverse tcp:7007 tcp:7007\\n\")), mdx(\"h2\", null, \"2. Abrir el men\\xFA de desarrollo\"), mdx(\"p\", null, \"Si, ya s\\xE9 que esto mismo se puede hacer con la combinaci\\xF3n de teclado \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Ctrl + M\"), \" (o \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Cmd + M\"), \" para los usuarions de macOS). Pero yo lo hago con l\\xEDnea de comandos porque... se puede! xD\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"adb shell input keyevent 82\\n\")), mdx(\"h2\", null, \"3. Copiar archivos desde y hacia el almacenamiento del dispositivo\"), mdx(\"p\", null, \"Para copiar un archivo \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"hacia\"), \" el almacenamiento del dipositivo:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"adb push <archivo-local> <archivo-dispositivo>\\n\")), mdx(\"p\", null, \"Por ejemplo:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"adb push ~/Downloads/image.png /sdcard/Downloads/image.png\\n\")), mdx(\"p\", null, \"Para copiar un archivo \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"desde\"), \" el almacenamiento del dispositivo hacia tu m\\xE1quina de desarrollo:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"adb pull <archivo-disposivo> <archivo-local>\\n\")), mdx(\"p\", null, \"Por ejemplo:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"adb pull /sdcard/Downloads/voice.aac ~/Downloads/voice.aac\\n\")), mdx(\"h2\", null, \"4. Instalar una app\"), mdx(\"p\", null, \"Si tienes un instalador .apk v\\xE1lido que quisieras instalar en un dispositivo desde la l\\xEDnea de comandos:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"adb install <archivo-apk>\\n\")), mdx(\"h2\", null, \"5. Sacar screenshot\"), mdx(\"p\", null, \"Es \\xFAtil tambi\\xE9n tomar una captura de pantalla del dispositivo en un determinado momento para documentar el estado de la aplicaci\\xF3n. Se logra facilmente con la siguiente sintaxis del comando:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"adb shell screencap <nombre-de-archivo>\\n\")), mdx(\"p\", null, \"Por ejemplo, el resultado de:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"adb shell screencap /sdcard/Pictures/captura-pantalla.png\\n\")), mdx(\"p\", null, \"es una imagen en \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/sdcard/Pictures\"), \" con el nombre \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"captura-pantalla.png\"), \".\"), mdx(\"h2\", null, \"6. Grabar video de la pantalla\"), mdx(\"p\", null, \"As\\xED como se puede obtener una captura de pantalla, es tambi\\xE9n posible grabar un video de la pantalla.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"adb shell screenrecord <nombre-de-archivo>\\n\")), mdx(\"p\", null, \"Para parar la grabaci\\xF3n basta con presionar la combinaci\\xF3n de teclado \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Ctrl + C\"), \".\"), mdx(\"p\", null, \"Por ejemplo:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"adb shell screenrecord /sdcard/Video/record.mp4\\n\\n# 10 segundos despu\\xE9s\\nCtrl + C\\n\")), mdx(\"h2\", null, \"Bonus!\"), mdx(\"p\", null, \"Este no es un comando de ADB en s\\xED, pero es posible abrir un emulador Android mediante la l\\xEDnea de comandos.\"), mdx(\"p\", null, \"En el directorio donde est\\xE1 instalado el Android SDK y dentro del directorio emulator (\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/path/to/Android/Sdk/emulator\"), \") existe un ejecutable llamado \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"emulator\"), \" con el cual se puede levantar un emulador:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"cd /path/to/Android/Sdk/emulator\\n./emulator @<nombre-del-emulador>\\n\")), mdx(\"p\", null, \"Para tener una lista de los emuladores disponibles para ejecutar:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"./emulator -list-avds\\n\")), mdx(\"p\", null, \"En mi caso la salida de este \\xFAltimo comando es:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"# Example Response!\\nPixel2\\nPixel2old\\nPixel_2_API_25\\nPixel_2_API_26\\n\")), mdx(\"p\", null, \"Por lo que un ejemplo de comando para ejecutar el emulador Pixel2 es:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"emulator @Pixel2\\n\")), mdx(\"p\", null, \"Por facilidad yo cre\\xE9 un link simbolico que apunta al ejecutable \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/path/to/Android/Sdk/emulator/emulator\"), \" ;)\"), mdx(\"p\", null, \"B\\xE1sicamente esos son los comandos que uso diaramente para desarrollar con React Native para Android. Saludos!\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"date":"5 enero 2020","title":"ADB para desarrolladores en React Native","description":"Han habido ocasiones en las que he necesitado abrir AndroidStudio para realizar una simple tarea relacionada con el dispositivo Android. ¿Hay una manera más rápida?","tags":["react-native","consola"]}}},"pageContext":{"slug":"adb-for-react-native-developers/"}},
    "staticQueryHashes": ["3665178171"]}