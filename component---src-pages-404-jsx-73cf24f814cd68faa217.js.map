{"version":3,"sources":["webpack:///./src/pages/404.jsx","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/utils/typography.js","webpack:///./src/utils/colors.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/layout.jsx","webpack:///./src/components/seo.js"],"names":["NotFoundPage","render","siteTitle","this","props","data","site","siteMetadata","title","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_2__","location","_components_seo__WEBPACK_IMPORTED_MODULE_3__","React","Component","pageQuery","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","createContext","Consumer","staticQueryData","query","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","rhythm","scale","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","typography_theme_funston__WEBPACK_IMPORTED_MODULE_1__","typography_theme_funston__WEBPACK_IMPORTED_MODULE_1___default","funstonTheme","overrideThemeStyles","a.gatsby-resp-image-link","boxShadow","typography","Typography","colors","midnightBlue","clouds","pureApple","ProdPageRenderer","_ref","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","styles","headerRootStyle","marginBottom","marginTop","headerLinkStyle","textDecoration","color","headerStyle","fontFamily","layoutContainer","display","flexDirection","marginLeft","marginRight","maxWidth","padding","minHeight","footer","flexGrow","justifyContent","socialLink","Layout","header","_this$props","react__WEBPACK_IMPORTED_MODULE_3___default","style","gatsby__WEBPACK_IMPORTED_MODULE_4__","to","linksQuery","_data$site$siteMetada","social","twitter","github","email","href","target","_public_static_d_3564818697_json__WEBPACK_IMPORTED_MODULE_2__","SEO","description","lang","meta","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","arrayOf"],"mappings":"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","file":"component---src-pages-404-jsx-73cf24f814cd68faa217.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nclass NotFoundPage extends React.Component {\n  render() {\n    const { data } = this.props\n    const siteTitle = data.site.siteMetadata.title\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO title=\"404: Not Found\" />\n        <h1>Not Found</h1>\n        <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n      </Layout>\n    )\n  }\n}\n\nexport default NotFoundPage\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import Typography from \"typography\";\nimport funstonTheme from \"typography-theme-funston\";\n\nfunstonTheme.overrideThemeStyles = () => {\n  return {\n    \"a.gatsby-resp-image-link\": {\n      boxShadow: `none`\n    }\n  };\n};\n\n// delete funstonTheme.googleFonts;\n\nconst typography = new Typography(funstonTheme);\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== `production`) {\n  typography.injectStyles();\n}\n\nexport default typography;\nexport const rhythm = typography.rhythm;\nexport const scale = typography.scale;\n","const colors = {\n  midnightBlue: \"#2c3e50\",\n  clouds: \"#ecf0f1\",\n  pureApple: \"#009432\"\n};\n\nexport default colors;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React, { Component } from \"react\";\nimport { Link, graphql, StaticQuery } from \"gatsby\";\n\nimport { rhythm, scale } from \"../utils/typography\";\nimport colors from \"../utils/colors\";\n\nconst styles = {\n  headerRootStyle: {\n    ...scale(1.5),\n    marginBottom: rhythm(1.5),\n    marginTop: 0\n  },\n  headerLinkStyle: {\n    boxShadow: \"none\",\n    textDecoration: \"none\",\n    color: colors.pureApple\n  },\n  headerStyle: {\n    fontFamily: \"Montserrat, sans-serif\",\n    marginTop: 0\n  },\n  layoutContainer: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    maxWidth: rhythm(24),\n    padding: `${rhythm(1.5)} ${rhythm(3 / 4)}`,\n    minHeight: \"100vh\"\n  },\n  footer: {\n    display: \"flex\",\n    flexGrow: 0,\n    justifyContent: \"center\"\n  },\n  socialLink: {\n    color: colors.pureApple,\n    padding: \"0 10px\"\n  }\n};\n\nclass Layout extends Component {\n  render() {\n    const { location, title, children } = this.props;\n    const { headerRootStyle, headerLinkStyle, headerStyle, layoutContainer } = styles;\n    const rootPath = `${__PATH_PREFIX__}/`;\n    let header;\n\n    if (location.pathname === rootPath) {\n      header = (\n        <h1 style={headerRootStyle}>\n          <Link style={headerLinkStyle} to={\"/\"}>\n            {title}\n          </Link>\n        </h1>\n      );\n    } else {\n      header = (\n        <h3 style={headerStyle}>\n          <Link style={headerLinkStyle} to={\"/\"}>\n            {title}\n          </Link>\n        </h3>\n      );\n    }\n    return (\n      <StaticQuery\n        query={linksQuery}\n        render={data => {\n          const { twitter, github, email } = data.site.siteMetadata.social;\n          return (\n            <div style={layoutContainer}>\n              <header>{header}</header>\n              <main style={{ flexGrow: 1 }}>{children}</main>\n              <footer style={styles.footer}>\n                <a style={styles.socialLink} href={twitter} target=\"_blank\">\n                  twitter\n                </a>{\" \"}\n                &bull;{\" \"}\n                <a style={styles.socialLink} href={github} target=\"_blank\">\n                  github\n                </a>{\" \"}\n                &bull;{\" \"}\n                <a style={styles.socialLink} href={email} target=\"_blank\">\n                  email\n                </a>\n              </footer>\n            </div>\n          );\n        }}\n      />\n    );\n  }\n}\n\nconst linksQuery = graphql`\n  query LinksQuery {\n    site {\n      siteMetadata {\n        social {\n          twitter\n          github\n          email\n        }\n      }\n    }\n  }\n`;\n\nexport default Layout;\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Helmet from \"react-helmet\";\nimport { useStaticQuery, graphql } from \"gatsby\";\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription\n        },\n        {\n          property: `og:title`,\n          content: title\n        },\n        {\n          property: `og:description`,\n          content: metaDescription\n        },\n        {\n          property: `og:type`,\n          content: `website`\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author\n        },\n        {\n          name: `twitter:title`,\n          content: title\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription\n        }\n      ].concat(meta)}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired\n};\n\nexport default SEO;\n"],"sourceRoot":""}