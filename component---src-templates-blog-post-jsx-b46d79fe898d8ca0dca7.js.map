{"version":3,"sources":["webpack:///./src/templates/blog-post.jsx"],"names":["styles","dateStyle","Object","assign","scale","display","marginBottom","rhythm","marginTop","ruleStyle","listStyle","flexWrap","justifyContent","padding","BlogPostTemplate","render","post","this","props","data","markdownRemark","siteTitle","site","siteMetadata","title","_this$props$pageConte","pageContext","previous","next","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_5__","location","_components_seo__WEBPACK_IMPORTED_MODULE_6__","frontmatter","description","excerpt","style","date","dangerouslySetInnerHTML","__html","html","_components_bio__WEBPACK_IMPORTED_MODULE_4__","gatsby__WEBPACK_IMPORTED_MODULE_3__","to","fields","slug","rel","React","Component","pageQuery"],"mappings":"kOAQMA,EAAS,CACbC,UAASC,OAAAC,OAAA,GACJC,aAAM,IADF,CAEPC,QAAS,QACTC,aAAcC,YAAO,GACrBC,UAAWD,aAAQ,KAErBE,UAAW,CACTH,aAAcC,YAAO,IAEvBG,UAAW,CACTL,QAAS,OACTM,SAAU,OACVC,eAAgB,gBAChBF,UAAW,OACXG,QAAS,IAIPC,4FACJC,OAAA,WACE,IAAMC,EAAOC,KAAKC,MAAMC,KAAKC,eACvBC,EAAYJ,KAAKC,MAAMC,KAAKG,KAAKC,aAAaC,MAF7CC,EAGoBR,KAAKC,MAAMQ,YAA9BC,EAHDF,EAGCE,SAAUC,EAHXH,EAGWG,KACV3B,EAAoCD,EAApCC,UAAWQ,EAAyBT,EAAzBS,UAAWC,EAAcV,EAAdU,UAE9B,OACEmB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQC,SAAUhB,KAAKC,MAAMe,SAAUT,MAAOH,GAC5CQ,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACEV,MAAOR,EAAKmB,YAAYX,MACxBY,YAAapB,EAAKmB,YAAYC,aAAepB,EAAKqB,UAEpDR,EAAAC,EAAAC,cAAA,UAAKf,EAAKmB,YAAYX,OACtBK,EAAAC,EAAAC,cAAA,KAAGO,MAAOrC,GAAYe,EAAKmB,YAAYI,MACvCV,EAAAC,EAAAC,cAAA,OAAKS,wBAAyB,CAAEC,OAAQzB,EAAK0B,QAC7Cb,EAAAC,EAAAC,cAAA,MAAIO,MAAO7B,IACXoB,EAAAC,EAAAC,cAACY,EAAA,EAAD,MACAd,EAAAC,EAAAC,cAAA,MAAIO,MAAO5B,GACTmB,EAAAC,EAAAC,cAAA,UACGJ,GACCE,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAMC,GAAIlB,EAASmB,OAAOC,KAAMC,IAAI,QAApC,KACKrB,EAASQ,YAAYX,QAI9BK,EAAAC,EAAAC,cAAA,UACGH,GACCC,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAMC,GAAIjB,EAAKkB,OAAOC,KAAMC,IAAI,QAC7BpB,EAAKO,YAAYX,MADpB,aA5BiByB,IAAMC,WAuCtBpC,YAER,IAAMqC,EAAS","file":"component---src-templates-blog-post-jsx-b46d79fe898d8ca0dca7.js","sourcesContent":["import React from \"react\";\nimport { Link, graphql } from \"gatsby\";\n\nimport Bio from \"../components/bio\";\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\nimport { rhythm, scale } from \"../utils/typography\";\n\nconst styles = {\n  dateStyle: {\n    ...scale(-1 / 5),\n    display: \"block\",\n    marginBottom: rhythm(1),\n    marginTop: rhythm(-1)\n  },\n  ruleStyle: {\n    marginBottom: rhythm(1)\n  },\n  listStyle: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-between\",\n    listStyle: \"none\",\n    padding: 0\n  }\n};\n\nclass BlogPostTemplate extends React.Component {\n  render() {\n    const post = this.props.data.markdownRemark;\n    const siteTitle = this.props.data.site.siteMetadata.title;\n    const { previous, next } = this.props.pageContext;\n    const { dateStyle, ruleStyle, listStyle } = styles;\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO\n          title={post.frontmatter.title}\n          description={post.frontmatter.description || post.excerpt}\n        />\n        <h1>{post.frontmatter.title}</h1>\n        <p style={dateStyle}>{post.frontmatter.date}</p>\n        <div dangerouslySetInnerHTML={{ __html: post.html }} />\n        <hr style={ruleStyle} />\n        <Bio />\n        <ul style={listStyle}>\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </Layout>\n    );\n  }\n}\n\nexport default BlogPostTemplate;\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}